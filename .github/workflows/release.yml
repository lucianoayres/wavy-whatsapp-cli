name: Release Build

on:
  push:
    tags:
      - "v*"

permissions:
  contents: write

jobs:
  build:
    name: Build and Release
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, darwin, windows]
        goarch: [amd64, arm64]
        exclude:
          - goos: windows
            goarch: arm64
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.24"

      - name: Get version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV

      - name: Build binary
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
          VERSION: ${{ env.VERSION }}
        run: |
          EXTENSION=""
          if [ "${{ matrix.goos }}" = "windows" ]; then
            EXTENSION=".exe"
          fi
          go build -ldflags "-X whatsmeow-go/cmd/wavy/common.Version=$VERSION" -o "bin/wavy-${{ matrix.goos }}-${{ matrix.goarch }}${EXTENSION}" ./cmd/wavy

      - name: Upload binary as artifact
        uses: actions/upload-artifact@v4
        with:
          name: wavy-${{ matrix.goos }}-${{ matrix.goarch }}
          path: bin/wavy-${{ matrix.goos }}-${{ matrix.goarch }}*
          if-no-files-found: error

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          name: Wavy WhatsApp CLI ${{ github.ref_name }}
          draft: false
          prerelease: false
          files: ./artifacts/**/*
          generate_release_notes: true
